From f34ae0ffcdce1cc07b4ed2fb5f7e485a22b3e39c Mon Sep 17 00:00:00 2001
From: Vivek Rajeev <vivekrajeev00@gmail.com>
Date: Mon, 27 Jul 2020 00:15:37 +0530
Subject: [PATCH] Create Patch File

---
 package.json           | 14 +++++++++++++-
 src/DataManipulator.ts | 33 +++++++++++++++++++++++----------
 src/Graph.tsx          | 25 +++++++++++++++----------
 3 files changed, 51 insertions(+), 21 deletions(-)

diff --git a/package.json b/package.json
index d2798ba..b46ae64 100644
--- a/package.json
+++ b/package.json
@@ -35,5 +35,17 @@
     "awesome-typescript-loader": "^5.2.1",
     "source-map-loader": "^0.2.4",
     "typescript": "^3.2.4"
-  }
+  },
+  "description": "<p align=\"center\">\r <a href=\"https://www.insidesherpa.com/virtual-internships/prototype/R5iK7HMxJGBgaSbvk/Technology%20Virtual%20Experience\" target=\"_blank\">\r <img src=\"https://insidesherpa-assets.s3-ap-southeast-2.amazonaws.com/icons/jpmorgan/github+repo+images/jpm+gitub+.png\"></a>\r </p>",
+  "main": "index.js",
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/insidesherpa/JPMC-tech-task-3-PY3.git"
+  },
+  "author": "Vivek Rajeev",
+  "license": "ISC",
+  "bugs": {
+    "url": "https://github.com/insidesherpa/JPMC-tech-task-3-PY3/issues"
+  },
+  "homepage": "https://github.com/insidesherpa/JPMC-tech-task-3-PY3#readme"
 }
diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..4f8369e 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
-  timestamp: Date,
+  price_abc: number,
+ price_def: number,
+ ratio: number,
+ timestamp: Date,
+ upper_bound: number,
+ lower_bound: number,
+ trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price)/2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price)/2;
+    const ratio = priceABC / priceDEF;
+    const upper_bound = 1 + 0.07;
+    const lower_bound = 1 - 0.07;
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
+                  serverResponds[0].timestamp : serverResponds[1].timestamp,
+      upper_bound: upper_bound,
+      lower_bound: lower_bound,
+      trigger_alert: (ratio > upper_bound || ratio < lower_bound ) ? ratio : undefined,
+
       };
-    })
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..e561529 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
       timestamp: 'date',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,23 +39,25 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio:'avg',
         timestamp: 'distinct count',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
-- 
2.26.0.windows.1

